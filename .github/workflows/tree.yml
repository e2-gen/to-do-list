name: Generate Complete Repository Tree

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  generate-tree:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # جلب كل التاريخ والملفات

    - name: Generate complete directory tree
      run: |
        # تثبيت أداة tree إذا لم تكن موجودة
        if ! command -v tree &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y tree
        fi

        # إنشاء ملف tree.txt
        > tree.txt

        # === 1. إنشاء شجرة كاملة للمستودع (باستثناء .git) ===
        echo "🌳 Complete Repository Structure" >> tree.txt
        echo "========================================" >> tree.txt
        tree -a -I '.git' --dirsfirst -n >> tree.txt
        echo -e "\n\n" >> tree.txt

        # === 2. إحصائيات الملفات ===
        echo "📊 File Statistics" >> tree.txt
        echo "========================================" >> tree.txt
        echo "Total files: $(find . -type f -not -path './.git/*' | wc -l)" >> tree.txt
        echo "Total directories: $(find . -type d -not -path './.git/*' | wc -l)" >> tree.txt
        echo -e "\n\n" >> tree.txt

        # === 3. إضافة محتوى جميع الملفات ===
        echo "📄 Contents of All Files" >> tree.txt
        echo "========================================" >> tree.txt

        # البحث عن جميع الملفات (باستثناء .git) وفرزها
        find . -type f -not -path './.git/*' -not -name 'tree.txt' | sort | while read filepath; do
          filename=$(basename "$filepath")
          dirpath=$(dirname "$filepath")
          
          # تخطي الملفات الكبيرة جداً (أكثر من 1MB)
          filesize=$(stat -c%s "$filepath" 2>/dev/null || stat -f%z "$filepath")
          if [ "$filesize" -gt 1048576 ]; then
            echo -e "\n\n==> $filepath (Skipped - File too large: $(echo "scale=2; $filesize/1048576" | bc) MB) <==" >> tree.txt
            continue
          fi
          
          echo -e "\n\n==> $filepath ($(echo "scale=2; $filesize/1024" | bc) KB) <==" >> tree.txt
          echo "--------------------------------------------------" >> tree.txt
          
          # التحقق من نوع الملف لعرض المحتوى بشكل مناسب
          case "$filename" in
            *.png|*.jpg|*.jpeg|*.gif|*.bmp|*.ico|*.pdf|*.zip|*.tar|*.gz|*.7z|*.rar)
              echo "[Binary file - Content not displayed]" >> tree.txt
              ;;
            *.mp3|*.mp4|*.avi|*.mov|*.wav|*.flac)
              echo "[Media file - Content not displayed]" >> tree.txt
              ;;
            *.exe|*.dll|*.so|*.dylib)
              echo "[Executable file - Content not displayed]" >> tree.txt
              ;;
            *)
              # محاولة عرض محتوى الملف النصي
              if file "$filepath" | grep -q "text"; then
                # إضافة أول 1000 سطر للملفات الكبيرة النصية
                if [ "$(wc -l < "$filepath")" -gt 1000 ]; then
                  head -n 1000 "$filepath" >> tree.txt
                  echo "... [Truncated - File too long]" >> tree.txt
                else
                  cat "$filepath" >> tree.txt
                fi
              else
                echo "[Binary or unsupported text file]" >> tree.txt
              fi
              ;;
          esac
        done

        # === 4. معلومات إضافية ===
        echo -e "\n\n🔍 Repository Information" >> tree.txt
        echo "========================================" >> tree.txt
        echo "Generated on: $(date)" >> tree.txt
        echo "Repository size: $(du -sh . | cut -f1)" >> tree.txt
        echo "Git branch: $(git branch --show-current)" >> tree.txt
        echo "Last commit: $(git log -1 --oneline)" >> tree.txt

    - name: Upload tree.txt as artifact
      uses: actions/upload-artifact@v4
      with:
        name: complete-repository-tree
        path: tree.txt

    - name: Display tree file size
      run: |
        echo "Tree file size: $(du -h tree.txt | cut -f1)"
